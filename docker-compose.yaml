version: '3'
services:
  keycloak:
    depends_on:
      - "kafka"
    image: iisa47642/keycloak26-kafka
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KAFKA_TOPIC: keycloak-events
      KAFKA_CLIENT_ID: keycloak
      KAFKA_BOOTSTRAP_SERVERS: kafka:9094
      KEYCLOAK_EXTRA_ARGS: |
        -Dkeycloak.profile=preview
        -Dkc.spi-events-listener-enabled=kafka
        -Dkc.spi-events-listener-provider=kafka
        -Dkc.spi-events-listener-kafka.bootstrap.servers=kafka:9094
        -Dkc.spi-events-listener-kafka-topic=keycloak-events
        -Dkc.spi-events-listener-kafka-client-id=keycloak
        -Dkc.spi-events-listener-kafka-include-events=register,update,delete,login
        -Dkc.spi-events-listener-kafka-include-metrics=true
    command: start-dev

  zookeeper:
    image: bitnami/zookeeper:3.8
    platform: linux/arm64  # Явно указываем ARM
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_INIT_LIMIT: 120  # Увеличиваем таймаут для ARM
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "zkServer.sh", "status" ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka:
    image: bitnami/kafka:3.6
    platform: linux/arm64  # ARM-совместимый образ
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"  # Внутренний listener
      - "9094:9094"  # Внешний listener для Keycloak
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_CFG_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "keycloak-events:1:1"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_BROKER_ID: 1
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
    kafka_data:

